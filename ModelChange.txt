Step 1: Delete All Migration Files
This is a crucial first step. It erases Django's memory of the database's history, preventing InconsistentMigrationHistory errors.

Go to your portal/migrations/ directory and delete all the numbered migration files (e.g., 0001_initial.py, 0002_..., etc.), but leave the __init__.py file untouched.

Run this command from your Connect2Give root directory in your WSL terminal:

Bash

# This command finds and deletes all .py files in the migrations folder,
# but it will not touch the __init__.py file.
find portal/migrations/ -type f -name "*.py" ! -name "__init__.py" -delete
Step 2: Drop the Database in MySQL
Log into MySQL Workbench or your MySQL command-line client and run this command. This completely deletes the database and all its tables.

SQL

DROP DATABASE connect2give_db;
Step 3: Re-create the Empty Database
Immediately after dropping it, re-create the empty database with the same name.

SQL

CREATE DATABASE connect2give_db;
Step 4: Create and Run All Migrations from Scratch
Now, go back to your terminal (with the (connect) environment active). We will generate a single, clean "initial" migration file that contains your entire final database structure, and then apply all migrations in the correct order to your fresh database.

Run these two commands one after the other:

Bash

# 1. Create the new, single, all-encompassing migration file for the portal app
python manage.py makemigrations portal

# 2. Apply all migrations (portal, admin, auth, etc.) to the fresh database
python manage.py migrate
After these four steps, your database will be completely empty and reset to your latest model structure. You can now run your server and start the registration process from the very beginning.